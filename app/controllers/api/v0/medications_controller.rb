class API::V0::MedicationsController < API::V0::BaseController
  before_action :identify_uid

  #----------------------------------------------------------------------------
  # PUT /api/v0/medications/decide

  def decide
    history = MedicationHistory.create_or_update(@uid, params["medication_id"], params["schedule_id"], params["choice"])
    if history
      render :json => {}, :status => :ok and return
    end
  end

  #----------------------------------------------------------------------------
  # POST /api/v0/medications/

  def create
    # var deferred = $q.defer()
    #   ref = this.ref();
    #   console.log(defaultMeds)
    #   for(var i = 0; i < defaultMeds.length; i++) {
    #
    #     that = {}
    #     that.i = i
    #
    #     //Each Med will have its own unique ID generated by FB!
    #     ref.push(defaultMeds[i]).then(function(response) {
    #       console.log(that.i)
    #       if (that.i == defaultMeds.length - 1)
    #         deferred.resolve()
    #     })
    #   }
    #
    #   console.log("REturning deferred...")
    #
    #   return deferred.promise
    #   var
    Medication.default_medications.each do |med|
      medication = Medication.find_by_uid_and_name(@uid, med[:trade_name])
      if medication.blank?
        Medication.save(@uid, med)
      end
    end

  end

end
